@include generate-font-utilities($UCfonts);

// text alignment
.u-align {

  &--left   { text-align: left !important; }
  &--right  { text-align: right !important; }
  &--center { text-align: center !important; }

  @each $breakpoint in map-keys($UCbreakpoints) {
    @include screen(breakpoint($breakpoint, min), breakpoint($breakpoint, max)) {
      &--right\@#{$breakpoint} {
        text-align: right !important;
      }
      &--left\@#{$breakpoint} {
        text-align: left !important;
      }
      &--center\@#{$breakpoint} {
        text-align: center !important;
      }
    }
  }
}

// text casing
.u-capitalize      { text-transform: capitalize; }
.u-uppercase       { text-transform: uppercase; }
.u-lowercase       { text-transform: lowercase; }

// text emphasis
.u-normal          { font-weight: weight(normal); font-style: normal; }
.u-bold, strong    { font-family: font(bold); font-weight: weight(normal); }
.u-italic, em      { font-family: font(italic); font-style: normal; font-weight: normal; }
.u-underline       { text-decoration: underline !important; }
.u-underline--none { text-decoration: none !important; }

// text height
.u-line-height {

  @each $line-height, $value in $UClineheights {
    &--#{$line-height} {
      line-height: $value !important;
    }
  }
}

// text formatting
.u-expanded     { letter-spacing: dim(letterSpacing,  2); }
.u-extended     { letter-spacing: dim(letterSpacing,  3); }
.u-tight        { letter-spacing: dim(letterSpacing, -1); }
.u-condensed    { letter-spacing: dim(letterSpacing, -2); }
.u-compressed   { letter-spacing: dim(letterSpacing, -3); }
.u-nowrap       { white-space: nowrap; }
.u-pre-wrap     { white-space: pre-wrap; }
.u-truncate     { @include mix-ellipsis; }

// text sizing
@each $scale, $value in $UCmodularscales {
  [data-font-size="#{$scale}"] {
    @if (($scale - 3) < 10) {
      font-size: rem($scale) !important;
    } @else {
      font-size: responsive rem(($scale - 3)) rem($scale) !important;
      font-range: breakpoint(xs, max) breakpoint(xl);
    }
  }
}

.u-trademark {

  &:after {
    content: '\2122'; // TM symbol
    display: inline-block;
    font-size: em(-1);
    line-height: 0;
  }
}

.u-drop-cap {

  &:first-letter {
    float: left;

    margin-top: -#{font(sans, ascent) * em(0) * 1/2};     // pull up
    margin-right: (em(0) * 3/16);                         // space to the right
    margin-bottom: -#{em(0) * 1/2};                       // prevent collision with 3rd line of text
    padding-top: (font(sans, capHeight) * rem(1) * 1/2);  // push down to align with top of lowercase text

    font-family: font(bold);
    font-size: (
      (em(0) * line-height(default) * 2) // double the font size
    - (font(sans, descent) * em(0))      // minus the descent
    );
  }
}

.u-list--unstyled {

  @at-root ul#{&}, ol#{&}, dl#{&} {
    // reset
    margin: 0;
    padding: 0;
    list-style: none;

    width: 100%;

    > li, dt, dd {
      // reset
      margin: 0;
    }
  }
}

.u-list--inline {
  @extend .u-list--unstyled;

  > li, dt, dd {
    display: inline-block;
  }
}

.u-list--comma-separated {
  @extend .u-list--inline;

  > li, dt, dd {

    &:not(:last-child) {

      &:after {
        content: ', ';
      }

      > * {
        float: left;
      }
    }
  }
}

.u-columns {

  &--2 {

    @include min-screen(breakpoint(sm)) {
      columns: 2;
      column-gap: rem(6);
    }
  }
}

small {
  font-size: ((rem(-2) / rem(0)) * 100%);
}
